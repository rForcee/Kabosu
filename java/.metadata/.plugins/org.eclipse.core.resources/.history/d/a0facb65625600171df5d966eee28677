package Com;
import java.io.*;
import java.net.*;
import javax.net.ssl.HttpsURLConnection;

import org.apache.commons.codec.binary.Base32;
import com.google.gson.Gson;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.HashMap;



public class RequestServeur {
	/**
	 * @param String urToRead
	 * @param String users
	 * @param String pass
	 * @throws Exception
	 * */
   public static String getHTMLAuth(String urlToRead, String users, String pass) throws Exception {
	   
      StringBuilder result = new StringBuilder();
      URL url = new URL(urlToRead); // crée un nouveau objet url
      String userpass = users+":"+ pass; // recupere le user et le password dans un String
      HttpURLConnection conn = (HttpURLConnection) url.openConnection(); //
      new Base32();
	String basicAuth = "Basic " + new String(Base32.encode(userpass.getBytes()));
      conn.setRequestMethod("GET");// indique le type de la requête
      conn.setRequestProperty ("Authorization", basicAuth); // indique la propriete de la requete 
      BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));// envoie le Get et place le retour dans un buffer
      String line;
      while ((line = rd.readLine()) != null) {
         result.append(line);
      }
      rd.close();
      return result.toString();
   }
   
 /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
//getIDgames
   public static String getIDGames() throws Exception {
	   	int i =0;
	      StringBuilder result = new StringBuilder();
	      URL url = new URL("https://arcane-ocean-22271.herokuapp.com/games"); // crée un nouveau objet url
	      HttpURLConnection conn = (HttpURLConnection) url.openConnection(); //
	      conn.setRequestMethod("GET");// indique le type de la requête
	      BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));// envoie le Get et place le retour dans un buffer
	      String line;
	      while ((line = rd.readLine()) != null) {
	    	 
	         result.append(line);
	      }
	      rd.close();
	      return result.toString();
	   }
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
//  POST request
   /**
    * @param String urlToRead
    * @param String user
    * @param String pass
    * */
	public static void sendPostCompt(String urlToRead,String user, String pass) throws Exception {
	/*		
		try {

	        URL url = new URL(urlToRead);  // crée un nouveau objet url
	        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
	        conn.setDoOutput(true);
	        conn.setRequestMethod("POST");// indique le type de la requête
	        conn.setRequestProperty("Content-Type", "application/json");// indique la propriete de la requete
	        
	        Gson gson = new Gson();
	        ObjectToJson obj = new ObjectToJson();
	        obj.username = user; // affectation data1
	        obj.password = pass; // affectation data2
	        String json = gson.toJson(obj);// convertion en JSON
	        System.out.println(json);  
	        OutputStream os = conn.getOutputStream();
	        os.write(json.getBytes());
	        os.flush();

	        if (conn.getResponseCode() != HttpURLConnection.HTTP_CREATED) {
	            throw new RuntimeException("Failed : HTTP error code : "
	                + conn.getResponseCode());
	        }

	        BufferedReader br = new BufferedReader(new InputStreamReader(
	                (conn.getInputStream())));

	        String output;
	        System.out.println("Output from Server .... \n");
	        while ((output = br.readLine()) != null) {
	            System.out.println(output);
	        }

	        conn.disconnect();

	      } catch (MalformedURLException e) {

	        e.printStackTrace();

	      } catch (IOException e) {

	        e.printStackTrace();

	     }
*/
	}
/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
//  POST request
	
	public static void sendPostMove(String urlToRead,String username,String password) throws Exception {
		TrameArduino trame = new TrameArduino(){};
		try {

	        URL url = new URL(urlToRead);  // crée un nouveau objet url
	        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
	        conn.setDoOutput(true);
	        conn.setRequestMethod("POST");// indique le type de la requête
	        conn.setRequestProperty("Content-Type", "application/json");// indique la propriete de la requete
	        
	        Gson gson = new Gson();
	        ObjectToJson obj = new ObjectToJson();
	        trame.TrameEnvoie("START", null);
	        obj.username = username;
	        obj.password = password;
	        obj.value = trame.trameRecu() ;
	        obj.action ="moves";
	        switch ( obj.value) {
	        case "1":
	        	obj.value="up";
	          break;
	        case "2":
	        	obj.value="down";
		          break;
	        case "3":
	        	obj.value="left";
		          break;
	        case "4":
	        	obj.value="right";
		          break;
	        }
	        String json = gson.toJson(obj);// convertion en JSON
	        System.out.println(json);  
	        OutputStream os = conn.getOutputStream();
	        os.write(json.getBytes());
	        os.flush();

	        if (conn.getResponseCode() != HttpURLConnection.HTTP_CREATED) {
	            throw new RuntimeException("Failed : HTTP error code : "
	                + conn.getResponseCode());
	        }

	        BufferedReader br = new BufferedReader(new InputStreamReader(
	                (conn.getInputStream())));

	        String output;
	        System.out.println("Output from Server .... \n");
	        while ((output = br.readLine()) != null) {
	            System.out.println(output);
	        }

	        conn.disconnect();

	      } catch (MalformedURLException e) {

	        e.printStackTrace();

	      } catch (IOException e) {

	        e.printStackTrace();

	     }

	}

/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
   			/*main pour test*/
    public static void main(String[] args) throws Exception
   {	String username = "JoueurToto";
   String password ="toto1";
    	 String id = getIDGames();
    	String cherche = "id";
         System.out.print("Found Last Index :" );
         System.out.println(id.lastIndexOf(cherche));
         System.out.println(id.substring(id.lastIndexOf(cherche)+4,id.length()-2));
         
       //id.substring(524);
        //String gameroute = id.substring(id.lastIndexOf(cherche),id.length()-2);
    //sendPostMove("https://arcane-ocean-22271.herokuapp.com/games/1/moves",username,password);
   }
}